CF::MinimumSize = 0.5
CF::Impure = 1
T=100
Po=5000

startshape flowfield []

shape flowfield {
  loop xx=100 [ ] loop yy=100 [ ]
    flowline(xx, yy, T) []
}

shape flowline(number xx, number yy, natural t) {
  CIRCLE [ x xx y yy s 0.3 a -0.94 ]
  if( t > 0 ) flowline(
    xx + (perlin(xx   , yy   , 10, 4)-0.5)*0.5,
    yy + (perlin(xx+Po, yy+Po, 10, 4)-0.5)*0.5,
    t - 1 ) [ ]
}

sanity_offset=30000 //perlin noise produces odd results at origin point
number perlin(xx, yy, scale, oct) =
  perlin_loop(xx+sanity_offset,yy+sanity_offset,scale,oct)/2
number perlin_loop(xx, yy, scale, oct) = if(oct < 1, 0,
  noise(xx, yy, scale/(1.4^oct))/(1.4^oct) + perlin_loop(xx, yy, scale, oct-1)
)

number noise(xx, yy, scale) = let(
  xi = floor(xx/scale); yi = floor(yy/scale);
  xf = xx/scale - xi;   yf = yy/scale - yi;
  lerp(lerp(randxy(xi, yi  ), randxy(xi+1,yi  ), xf),
       lerp(randxy(xi, yi+1), randxy(xi+1,yi+1), xf), yf)
)
lerp(v1, v2, t) = (1-t)*v1 + t*v2

rand_p1=25889
rand_p2=26903
number randxy(xx, yy) = mod(
  bitxor(xx*(xx+rand_p1)+rand_p2,
         yy*(yy+rand_p2)+rand_p1),
  10000)/10000
